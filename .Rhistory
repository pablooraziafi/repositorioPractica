ptm <- proc.time()
ptm
proc.time()
proc.time() - ptm
primer.par.for <- function(vector.bucle) {
for (i in 1:length(vector.bucle)) {
if (vector.bucle[i] %% 2 == 0) {
return (vector.bucle[i])
}
}
return (NULL)
}
primer.par.foreach <- function(vector.bucle) {
for (valor in vector.bucle) {
if (valor %% 2 == 0) {
return (valor)
}
}
return (NULL)
}
primer.par.while <- function(vector.bucle) {
i <- 1
largo.vector <- length(vector.bucle)
while ( i <= largo.vector )  {
if (vector.bucle[i] %% 2 == 0) {
return (vector.bucle[i])
}
i <- i + 1
}
return (NULL)
}
calcular.tiempo <- function(vector, funcion.evaluada) {
ptm <- proc.time()
function.evaluada(vector)
return (proc.time() - ptm)
}
rep(1, 2**10)
calcular.tiempo(rep(1, 2**10) , primer.par.foreach)
calcular.tiempo <- function(vector, funcion.evaluada) {
ptm <- proc.time()
funcion.evaluada(vector)
return (proc.time() - ptm)
}
calcular.tiempo(rep(1, 2**10), primer.par.foreach)
calcular.tiempo(rep(1, 2**20), primer.par.foreach)
calcular.tiempo(primer.par.foreach, rep(1, 2**20))
calcular.tiempo <- function(funcion.evaluada, vector) {
ptm <- proc.time()
funcion.evaluada(vector)
return (proc.time() - ptm)
}
calcular.tiempo(primer.par.foreach, rep(1, 2**20))
calcular.tiempo(primer.par.foreach, rep(1, 2**20))
?merge
library(ejercicio4github)
library(ejercicio4github)
?primer.par.for
